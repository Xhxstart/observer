文章：https://blog.csdn.net/qq_32020035/article/details/80951470

/**
 * 
 */
package com.mode.state;

import java.util.HashMap;
import java.util.Map;

/**
 * @author kigak-ka
 *
 */
public class VoteManager {
	
	//状態持つの処理対象
	private VoteState state = null;
	
	//记录用户投票的结果，Map<String,String>对应Map<用户名称，投票的选项>
	private Map<String,String> mapVote = new HashMap<String,String>();
	
	//记录用户投票次数，Map<String,Integer>对应Map<用户名称，投票的次数>
	private Map<String,Integer> mapVoteCount = new HashMap<String,Integer>();

	/**
	 * @return mapVote　获取用户投票结果的Map
	 */
	public Map<String,String> getMapVote() {
		return mapVote;
	}
	
	public void vote (String user,String voteItem){
		 //1.为该用户增加投票次数
		//从记录中取出该用户已有的投票次数
		Integer preVoteCount = mapVoteCount.get(user);
		
		if(preVoteCount == null) {
			preVoteCount = 0;			
		}
		preVoteCount += 1;
		mapVoteCount.put(user, preVoteCount);
		//2.判断该用户的投票类型，就相当于判断对应的状态
		//到底是正常投票、重复投票、恶意投票还是上黑名单的状态
		if(preVoteCount == 1) {
			state = new NormalVoteState();
		}else if (1 < preVoteCount && preVoteCount<= 5 ) {
			state = new RepeatVoteState();
		}else if (5 < preVoteCount && preVoteCount<= 8) {
			state = new SpiteVoteState();
		}else if (preVoteCount > 8) {
			state = new BlackVoteState();
		}

		//然后转调状态对象来进行相应的操作
		state.vote(user, voteItem, this);
	}
	

}
